---
title: "ape"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(ape)
library(dplyr)
```

You can add options to executable code like this

```{r}
#| echo: false

layout(matrix(1:9, 3, 3))
### Nine random trees:
for (i in 1:9) plot(rtree(20))
### Nine random cladograms:
#for (i in 1:9) plot(rtree(20, FALSE), type = "c")
### generate 4 random trees of bird orders:
#data(bird.orders)
#layout(matrix(1:4, 2, 2))
#for (i in 1:4)
#  plot(rcoal(23, tip.label = bird.orders$tip.label), no.margin = TRUE)
#layout(1)
#par(mar = c(5, 4, 4, 2))
```

The `echo: false` option disables the printing of code (only output is displayed).

```{r}
sample_rtree <- rtree(4)

plot(sample_rtree)
```

```{r}
sample_rtree_edges <- sample_rtree[["edge"]]
sample_rtree_edges
```

```{r}
# Order the edges by the second column

# Convert the matrix to a data frame for easier manipulation with dplyr
edges_df <- as.data.frame(sample_rtree_edges) %>%
  rename(from = V1, to = V2) %>%
  arrange(to)  # Order by the second column
```

```{r}
edges_df
```

```{r}
edges_df$to_name <- c(sample_rtree$tip.label, paste0("n", seq_len(sample_rtree$Nnode-1)))
edges_df
```

```{r}
devtools::load_all()
```

```{r}
test = edge_matrix_to_parent_array(edge_matrix = edges_df)
```

```{r}
plot_tree_from_parent_vector(test)
```
